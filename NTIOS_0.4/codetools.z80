
system:
	push de
	ld de, cmd_help
	call strcomp            ; seek'n help? we got you!
	jr z, .help
	
	ld de, cmd_dxdiag
	call strcomp            ; seek'n help? we got you!
	jp z, .dxdiag
	
	ld de, cmd_cls
	call strcomp
	jr z, .cls
	
	ld de, cmd_mem
	call strcomp
	jp z, .mem
	
	ld de, cmd_dir
	call strcomp
	jr z, .dir
	
	
	ld de, cmd_in
	call strcomp
	jp z, .in
	
	ld de, cmd_peek
	call strcomp
	jp z, .peek
	
	ld de, cmd_poke
	call strcomp
	jp z, .poke
	
	ld de, cmd_inspect
	call strcomp
	jp z, .inspect
	
	ld de, cmd_reboot
	call strcomp
	jp z, reboot
	
	ld de, cmd_out
	call strcomp
	jp z, .out
	
	ld de, cmd_di
	call strcomp
	jp z, .di
	
	ld de, cmd_format
	call strcomp
	jp z, .format
	pop de
	ret
.help:
	ld hl, helpstr
    call print
    jp .loop
.cls:
	ld a, 0
	call send
	jp .loop
.dir:
	ld hl, .loop
	call try
	jp .e1
	db 0,"terminal_pgm.e1",0
.e1:
	;call list_files
	;call print
	call notry
	jp .loop
.mem:
	ld a, '0'
	call send
	ld a, 'x'
	call send
	call bytes_free
	call int_to_hex
	call ostream
	ld hl, .bytes_str
	call print
	jp .loop
.di:
	ld hl, disk_name_str
	call print
	ld hl, fs_s0
	ld bc, 0
	ld de, 0
	call ide_load
	ld hl, fs_s0+3
	call print
	jp .loop
.format:
	;ld hl, .format_areyousure
	;call printnl
	;call rec_char
	;push af
	;ld a, 13
	;call send
	;pop af
	;cp 'Y'
	;jp nz, .loop
	;ld hl,.formatting
	;call print
	;call format
	;ld hl, .formatted
	;call print
	jp .loop
.dxdiag:  ; Diagnostic Program
	call dxdiag
	jp .loop
.peek:
	ld hl, .instr
	call ostream
    ld hl, term_kbd_buff
	call input
	call hex_to_int
	ld hl, .outstr
	call ostream
	ld a, (de)
	call byte_to_hex
	call print
	jp .loop
.poke:
	ld hl, .instr
	call ostream
    ld hl, term_kbd_buff
	call input
	call hex_to_int
	ld hl, .outstr
	call ostream
    ld hl, term_kbd_buff
	call input
	call hex_to_byte
	ex de, hl
	ld (hl),a
	jp .loop
.inspect:
	ld hl, .instr
	call ostream
    ld hl, term_kbd_buff
	call input
	call hex_to_int
	ld h, d
	ld l, e
	call print_memory
	jp .loop
.out:
	ld hl, .instr
	call ostream
    ld hl, term_kbd_buff
	call input
	call hex_to_int
	ld b, d
	ld c, e
	ld hl, .outstr
	call ostream
    ld hl, term_kbd_buff
	call input
	call hex_to_byte
	out (c), a
	jp .loop
.outstr: db "Data > ", 0
.in:
	ld hl, .instr
	call ostream
    ld hl, term_kbd_buff
	call input
	call hex_to_int
	ld b, d
	ld c, e
	ld hl, .outstr
	call ostream
	in a, (c)
	call byte_to_hex
	call print
.loop:
	pop de
	ret
.instr: db "Address > ", 0
.bytes_str: db " Bytes", 0
.format_areyousure: db "You are about to erase all data on the drive. Are you sure? [Y/n]",0
.formatting:		db "Formatting...",0
.formatted:			db "Done formatting.",0
cmd_mem:           db "mem", 0
cmd_cls:           db "cls", 0
cmd_dir:			db "dir", 0
cmd_reboot:			db "reboot", 0
cmd_di:				DB "di", 0
cmd_out:			db "out", 0
cmd_in:				db "in", 0
cmd_peek:			db "peek",0
cmd_poke:			db "poke",0
cmd_inspect:		db "inspect",0
cmd_dxdiag:			DB "dxdiag", 0
cmd_format:			DB "format", 0
