;  Origionally from some old OS design I made.
; Then became MinOS
; Kernel reused in NTIOS 0.1
; Kernel heavily modified NTIOS 0.2
; Copyright Dylan Brophy 2017
;
org $0000
; CONFIGURATION
print: equ uart_print ; send text data where?
printnl: equ ostream
input: equ uart_input ; get user input from?
send:  equ uart_send  ; send chars to?
rec_char: equ uart_rec
reboot: equ os_start

stack_top:     equ $FFFF


;ide_port:      equ $8
keyboard_port: equ $20 ; where is the keyboard in IO land?


vectors:
	jp os_start ; 0000 (reboot)
	jp ostream  ; 0003
	jp print    ; 0006
	jp alloc    ; 0009
	jp 0;delete   000C
	jp strcomp  ; 000F
	jp input    ; 0012
	jp 0000     ; 0015
	jp 0000;endpgm   ; 0018
	
	jp 0000     ; 001B
	jp 0000     ; 001E
	jp 0000     ; 0021
	jp 0000     ; 0024
	nop
	jp 0000     ; 0028
	jp 0000     ; 002B
	jp 0000     ; 002E
	jp 0000     ; 0031
	jp 0000     ; 0034
nop             ; 0037
int38:          ; 0038, Z80 interrupt mode 1 vector
	push hl
	push af
	push de
	push bc
	push ix
	push iy
	;jp 55 ; lol
	
	pop iy
	pop ix
	pop bc
	pop de
	pop af
	pop hl
	reti
os_start:
	di
	call dxdiag_LED
	ld sp, stack_top
	ld hl, 0
	;ld hl, (heap_top)
	;call int_to_hex
	; Hardware (UART) setup if using 18.43MHz clock
	ld a, $80 
	out (3), a			; SET DLAB
	ld a, 1				; 115200 baud
	out (0), a
	ld a, 0
	out (1), a        
	ld a, 3
	out (3), a          ; 8-bit serial, RESET DLAB
	ld a, 1
	out (2), a          ; enable FIFOs
	
	ld a, 0
	call uart_send
	call memory_init
	call os_setup_tracer
	;call list_files
	ld hl, .meminit_2ide
	call print
	
	ld hl, .diskerror
	call try
	
	jp .e1
db 0,"os_start.e1",0
.e1:
	call ide_init
	jp .e2
db 0,"os_start.e2",0
.e2:
	;call FAT_setup
	
	call notry
.disk_err_ret:
	ld hl, .ideinit_2term
	call print
	
	im 1
	ei
	
	jp terminal_pgm     ; start terminal program! WOOO!
.diskerror:
	ld hl, .diskerr_str
	call print
	jp .disk_err_ret
.meminit_2ide: db "Memory Allocation loaded.  Starting CF driver...",0
.ideinit_2term: db "CF initialized.  Starting terminal...",0
.diskerr_str: db  "Error while starting CF drivers. DO NOT USE disk/drive commands.",0
system_error:
	call traceback
	call print
	ld hl, .msg
	call print
	call input
	jp 0
.msg: db "Computer will not recover, press enter to reboot.", 0
INCLUDE "string.z80"
INCLUDE "uart.z80"
INCLUDE "memory.z80"
INCLUDE "keyboard.z80"
INCLUDE "IDE.z80"
INCLUDE "FAT.z80"
INCLUDE "dxdiag.z80"
INCLUDE "misc.z80"
INCLUDE "traceback.z80"
cmd_help:          db "help", 0
helpstr:           db "cls, mem, dir, reboot, di, dxdiag", 0
terminal_pgm:
	ld hl, term_start_string   ; pleasantly start the terminal
	call print
.loop:
	ld hl, term_cursor
	call ostream
    ld hl, term_kbd_buff
	call input
	
	ld de, cmd_help
	call strcomp            ; seek'n help? we got you!
	jr z, .help
	
	ld de, cmd_dxdiag
	call strcomp            ; seek'n help? we got you!
	jp z, .dxdiag
	
	ld de, cmd_cls
	call strcomp
	jr z, .cls
	
	ld de, cmd_mem
	call strcomp
	jr z, .mem
	
	ld de, cmd_dir
	call strcomp
	jr z, .dir
	
	ld de, cmd_reboot
	call strcomp
	jp z, reboot
	
	ld de, cmd_di
	call strcomp
	jp z, .di
	
	ld de, cmd_format
	call strcomp
	jp z, .format
	
	ld hl, no_cmd
	call print
	jp .loop
.help:
	ld hl, helpstr
    call print
    jr .loop
.cls:
	ld a, 0
	call send
	jr .loop
.dir:
	ld hl, .loop
	call try
	jp .e1
	db 0,"terminal_pgm.e1",0
.e1:
	call list_files
	call print
	call notry
	jp .loop
.mem:
	ld a, '0'
	call send
	ld a, 'x'
	call send
	call bytes_free
	call int_to_hex
	call ostream
	ld hl, .bytes_str
	call print
	jp .loop
.di:
	ld hl, disk_name_str
	call print
	ld hl, (fs_s0)
	ld bc, 0
	ld de, 0
	call ide_load
	ld hl, (fs_s0+FAT.LABEL)
	call print
	jp .loop
.format:
	;ld hl, .format_areyousure
	;call printnl
	;call rec_char
	;push af
	;ld a, 13
	;call send
	;pop af
	;cp 'Y'
	;jp nz, .loop
	;ld hl,.formatting
	;call print
	;call format
	;ld hl, .formatted
	;call print
	jp .loop
.dxdiag:  ; Diagnostic Program
	call dxdiag
	jp .loop
.bytes_str: db " Bytes", 0
.format_areyousure: db "You are about to erase all data on the drive. Are you sure? [Y/n]",0
.formatting:		db "Formatting...",0
.formatted:			db "Done formatting.",0
term_start_string: db "NTIOS 0.1", 0
term_cursor:       db "# ", 0
cmd_mem:           db "mem", 0
cmd_cls:           db "cls", 0
cmd_dir:			db "dir", 0
cmd_reboot:			db "reboot", 0
cmd_di:				DB "di", 0
cmd_dxdiag:			DB "dxdiag", 0
cmd_format:			DB "format", 0
no_cmd:            	db "Command Not Found.", 0
disk_name_str:		db "Label: ",0
heap_top:		equ $8002
tmp:			equ $8004
term_kbd_buff:	equ $8006
catch_stack:	equ $8105
tmp_sp:			equ $8106
tmp_sp2:		equ $8108
catch_sp:		equ $8108
fs_s0:			equ $810A
fs_buffer:		equ $830A
